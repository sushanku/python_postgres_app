name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      DOCKER_IMAGE:
        description: 'Docker image name (including DockerHub username)'
        required: true
        default: 'sushanku/flask-upload-app'
      DOCKER_TAG:
        description: 'Docker image tag'
        required: true
        default: 'latest'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set environment variables
      run: |
        echo "DOCKER_IMAGE=${{ github.event.inputs.DOCKER_IMAGE || 'sushanku/flask-upload-app' }}" >> $GITHUB_ENV
        echo "DOCKER_TAG=${{ github.event.inputs.DOCKER_TAG || github.run_number }}" >> $GITHUB_ENV

    - name: Build Docker Image
      run: |
        echo "Building docker image for flask application with postgres DB"
        docker build -t ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} .

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push Docker Image
      run: |
        docker tag ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} ${{ env.DOCKER_IMAGE }}:latest
        docker push ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
        docker push ${{ env.DOCKER_IMAGE }}:latest

    - name: Logout from DockerHub
      if: always()
      run: docker logout

  deploy:
    needs: build-and-push
    runs-on: [self-hosted, flask-server]

    steps:
    - uses: actions/checkout@v2

    - name: Deploy with Docker
      run: |
        echo "Deploying docker image for flask postgres application"
        docker compose -f docker-compose.yml up -d